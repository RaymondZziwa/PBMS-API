// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  user_id       Int            @id @default(autoincrement())
  first_name    String
  last_name     String
  gender        String
  nin_number    String
  email         String         @unique
  password      String
  branch        String
  department    String
  role          String
  salary        String
  dob           DateTime
  contact1      String
  contact2      String?
  bankinfo      bankinfo?
  educationinfo educationinfo?
  addressinfo   addressinfo?
  createdAt     DateTime       @default(now())
  userSessions  userSessions[]
}

model userSessions {
  sessionId        String   @id @default(cuid())
  user             user     @relation(fields: [user_id], references: [user_id])
  user_id          Int
  last_time_online DateTime
}

model bankinfo {
  id         Int    @id @default(autoincrement())
  user       user   @relation(fields: [user_id], references: [user_id])
  user_id    Int    @unique
  bank_name  String
  account_no String
}

model educationinfo {
  id            Int    @id @default(autoincrement())
  user          user   @relation(fields: [user_id], references: [user_id])
  user_id       Int    @unique
  qualification String
  institution   String
}

model addressinfo {
  id        Int    @id @default(autoincrement())
  user      user   @relation(fields: [user_id], references: [user_id])
  user_id   Int    @unique
  village   String
  parish    String
  subcounty String
  county    String
  district  String
}

model client {
  client_id       Int               @id @default(autoincrement())
  first_name      String
  last_name       String
  email           String?
  phone           String            @unique
  address         String?
  externalreceipt externalreceipt[]
  equatorialshopsales      equatorialshopsales[]
  equatorialprojectssales  equatorialprojectssales[]
  masanafuprojectssales  masanafuprojectssales[]
  masanafushopsales      masanafushopsales[]
  registeredAt    DateTime          @default(now())
  updatedAt       DateTime          @default(now()) @updatedAt
}

model equatorialshopsales {
  sale_id   Int      @id @default(autoincrement())
  client    client   @relation(fields: [client_id], references: [client_id])
  client_id Int      
  items     String
  totalCost String
  payment_method String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model equatorialprojectssales {
  sale_id   Int      @id @default(autoincrement())
  client    client   @relation(fields: [client_id], references: [client_id])
  client_id Int      
  items     String
  totalCost String
  payment_method String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model masanafuprojectssales {
  sale_id   Int      @id @default(autoincrement())
  client    client   @relation(fields: [client_id], references: [client_id])
  client_id Int      
  items     String
  totalCost String
  payment_method String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model masanafushopsales {
  sale_id      Int      @id @default(autoincrement())
  client       client   @relation(fields: [client_id], references: [client_id])
  client_id    Int      
  items        String
  totalCost    String
  payment_method String
  registeredAt DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

model supplier {
  supplier_id   Int             @id @default(autoincrement())
  first_name    String
  last_name     String
  email         String?         @unique
  phone         String          @unique
  address       String?
  registeredAt  DateTime        @default(now())
  updatedAt     DateTime        @default(now()) @updatedAt
  supplyrecords supplyrecords[]
}

model supplyrecords {
  supply_id    Int      @id @default(autoincrement())
  supplier     supplier @relation(fields: [supplier_id], references: [supplier_id])
  supplier_id  Int
  items        String
  totalCost    String
  registeredAt DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

model productcategories {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  product     product[]
}

model product {
  product_id                    Int                       @id @default(autoincrement())
  productcategories             productcategories         @relation(fields: [category_id], references: [id])
  category_id                   Int   
  name                          String
  price                         Float
  barcode                       String
  createdAt                     DateTime                  @default(now())
  updatedAt                     DateTime                  @default(now()) @updatedAt
  equatorialshopinventory                equatorialshopinventory[]
  masanafushopinventory                masanafushopinventory[]
  masanafugeneralstoreinventory       masanafugeneralstoreinventory[]
}

model project {
  project_id            Int                     @id @default(autoincrement())
  name                  String
  price                 Float
  barcode               String
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @default(now()) @updatedAt
  equatorialprojectsinventory    equatorialprojectsinventory[]
  masanafuprojectsinventory    masanafuprojectsinventory[]
}

model munits {
  unit_id     Int      @id @default(autoincrement())
  unit_name   String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model equatorialshopinventory {
  inventory_id Int     @id @default(autoincrement())
  product      product @relation(fields: [product_id], references: [product_id])
  product_id   Int
  quantity     Float
  units        Int
}

model equatorialprojectsinventory {
  inventory_id Int     @id @default(autoincrement())
  project      project @relation(fields: [project_id], references: [project_id])
  project_id   Int
  quantity     Float
  units        String
}

model equatorialprojectrestockrecord {
  record_id        Int      @id @default(autoincrement())
  items             String
  quantity          String
  units             Int
  source           String
  notes            String?
  transaction_date DateTime
  authorized_by    String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model equatorialprojecttakeoutrecord {
  record_id        Int      @id @default(autoincrement())
  items            String
  quantity          String
  units             Int
  transaction_date DateTime
  destination      String
  authorized_by    String
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model equatorialshoprestockrecord {
  record_id        Int      @id @default(autoincrement())
  items            String
  quantity          String
  units             Int
  source           String
  notes            String?
  transaction_date DateTime
  authorized_by    String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model equatorialshopStocktakeoutrecord {
  record_id        Int      @id @default(autoincrement())
  items            String
  quantity          String
  units             Int
  transaction_date DateTime
  destination      String
  authorized_by    String
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model externalreceipt {
  receipt_number String    @id @unique
  client         client?   @relation(fields: [client_id], references: [client_id])
  client_id      Int
  items          String
  total_price    Float
  balance        Float
  payment_method String
  payment_status String
  notes          String?
  transactionID  String
  sale_date      DateTime
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model saffronuser {
  user_id     Int           @id @default(autoincrement())
  username    String        @unique
  email       String        @unique
  password    String
  totalpts    Float
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  saffronsale saffronsale[]
}

model saffronsale {
  sale_id     Int         @id @default(autoincrement())
  saffronuser saffronuser @relation(fields: [user_id], references: [user_id])
  user_id     Int
  amount_sold Int
  points      Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model massageincome {
  submission_id   Int      @id @default(autoincrement())
  submission_date DateTime
  massage_amount  Float
  product_amount  Float
  submitted_by    String
  received_by     String?
  status          String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model equatorialshopexpense {
  expense_id     Int      @id @default(autoincrement())
  date           DateTime
  category       String
  name           String
  description    String
  cost           Float
  balance        Float
  payment_method String
  payment_status String
  receipt_image  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt
}

model cheque {
  entry_id          Int      @id @default(autoincrement())
  cheque_number     String
  drawer_first_name String
  drawer_last_name  String
  bank              String
  reason            String
  amount            Float
  date_issued       DateTime
  banking_date      DateTime
  notes             String?
  status            String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}


model branch {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  department  department[]
}

model department {
  id          Int      @id @default(autoincrement())
  branch      branch   @relation(fields: [branch_id], references: [id])
  branch_id   Int
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  role        role[]
}

model role {
  id          Int        @id @default(autoincrement())
  department  department @relation(fields: [dept_id], references: [id])
  dept_id     Int
  name        String
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model masanafushopexpense {
  expense_id     Int      @id @default(autoincrement())
  date           DateTime
  category       String
  name           String
  description    String
  cost           Float
  balance        Float
  payment_method String
  payment_status String
  receipt_image  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now()) @updatedAt
}

model masanafushopinventory {
  inventory_id Int     @id @default(autoincrement())
  product      product @relation(fields: [product_id], references: [product_id])
  product_id   Int
  quantity     Float
  units        Int
}

model masanafuprojectsinventory {
  inventory_id Int     @id @default(autoincrement())
  project      project @relation(fields: [project_id], references: [project_id])
  project_id   Int
  quantity     Float
  units        String
}

model masanafuprojectrestockrecord {
  record_id        Int      @id @default(autoincrement())
  items             String
  source           String
  notes            String?
  transaction_date DateTime
  authorized_by    String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model masanafuprojecttakeoutrecord {
  record_id        Int      @id @default(autoincrement())
  items            String
  transaction_date DateTime
  destination      String
  authorized_by    String
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model masanafushoprestockrecord {
  record_id        Int      @id @default(autoincrement())
  items            String
  source           String
  notes            String?
  transaction_date DateTime
  authorized_by    String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model masanafushopStocktakeoutrecord {
  record_id        Int      @id @default(autoincrement())
  items            String
  transaction_date DateTime
  destination      String
  authorized_by    String
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model markettingEmail {
  id        Int      @id @default(autoincrement())
  subject   String
  body      String
  sent_at   DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model markettingSms {
  id        Int      @id @default(autoincrement())
  message   String
  sent_at   DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model meeting {
  id           Int      @id @default(autoincrement())
  name         String
  description  String?
  meeting_date String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
}

model events {
  id               Int      @id @default(autoincrement())
  name             String
  description      String?
  event_start_date String
  event_end_date   String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model directory {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  doc         doc[]
}

model doc {
  id                Int       @id @default(autoincrement())
  directory         directory @relation(fields: [home_directory_id], references: [id])
  home_directory_id Int
  name              String
  file_type         String

  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model masanafugeneralstoreinventory {
  inventory_id Int     @id @default(autoincrement())
  product      product @relation(fields: [product_id], references: [product_id])
  product_id   Int
  quantity     Float
  units        Int
}

model masanafugeneralstorerestockrecord {
  record_id        Int      @id @default(autoincrement())
  items            String
  source           String
  notes            String?
  transaction_date DateTime
  authorized_by    String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}

model masanafugeneralstoreStocktakeoutrecord {
  record_id        Int      @id @default(autoincrement())
  items            String
  transaction_date DateTime
  destination      String
  authorized_by    String
  notes            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now()) @updatedAt
}